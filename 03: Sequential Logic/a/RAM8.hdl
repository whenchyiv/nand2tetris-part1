// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);

    // Registers
    Register(in=in, out=register0, load=load0);
    Register(in=in, out=register1, load=load1);
    Register(in=in, out=register2, load=load2);
    Register(in=in, out=register3, load=load3);
    Register(in=in, out=register4, load=load4);
    Register(in=in, out=register5, load=load5);
    Register(in=in, out=register6, load=load6);
    Register(in=in, out=register7, load=load7);

    Mux8Way16(a=register0, b=register1, c=register2, d=register3, e=register4, f=register5, g=register6, h=register7, sel=address, out=out);
}